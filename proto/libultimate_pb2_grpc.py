# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import libultimate_pb2 as proto_dot_libultimate__pb2


class LibUltimateStub(object):
    """Interface exported by the server.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OperateController = channel.unary_unary(
                '/libultimate.LibUltimate/OperateController',
                request_serializer=proto_dot_libultimate__pb2.ControlProps.SerializeToString,
                response_deserializer=proto_dot_libultimate__pb2.ControlResult.FromString,
                )
        self.GetGameState = channel.unary_stream(
                '/libultimate.LibUltimate/GetGameState',
                request_serializer=proto_dot_libultimate__pb2.GameStateProps.SerializeToString,
                response_deserializer=proto_dot_libultimate__pb2.GameState.FromString,
                )


class LibUltimateServicer(object):
    """Interface exported by the server.
    """

    def OperateController(self, request, context):
        """A simple RPC.

        Obtains the feature at a given position.

        A feature with an empty name is returned if there's no feature at the given
        position.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGameState(self, request, context):
        """A server-to-client streaming RPC.

        Obtains the Features available within the given Rectangle.  Results are
        streamed rather than returned at once (e.g. in a response message with a
        repeated field), as the rectangle may cover a large area and contain a
        huge number of features.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LibUltimateServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OperateController': grpc.unary_unary_rpc_method_handler(
                    servicer.OperateController,
                    request_deserializer=proto_dot_libultimate__pb2.ControlProps.FromString,
                    response_serializer=proto_dot_libultimate__pb2.ControlResult.SerializeToString,
            ),
            'GetGameState': grpc.unary_stream_rpc_method_handler(
                    servicer.GetGameState,
                    request_deserializer=proto_dot_libultimate__pb2.GameStateProps.FromString,
                    response_serializer=proto_dot_libultimate__pb2.GameState.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'libultimate.LibUltimate', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LibUltimate(object):
    """Interface exported by the server.
    """

    @staticmethod
    def OperateController(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/libultimate.LibUltimate/OperateController',
            proto_dot_libultimate__pb2.ControlProps.SerializeToString,
            proto_dot_libultimate__pb2.ControlResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetGameState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/libultimate.LibUltimate/GetGameState',
            proto_dot_libultimate__pb2.GameStateProps.SerializeToString,
            proto_dot_libultimate__pb2.GameState.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
